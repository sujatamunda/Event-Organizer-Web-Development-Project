@model EventOrganizer.Models.Bookings

@{
    ViewData["Title"] = "Bookings";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}

<div class="container d-flex justify-content-center">
    <div class="col-md-6">
        <!-- Width remains the same -->
        <div class="card shadow-lg">
            <div class="card-body text-center bg-primary text-white rounded-top py-2">
                <!-- Reduced padding -->
                
                <h6 class="mb-2">Bookings</h6>
            </div>
            <div class="card-body p-3">
                <!-- Reduced padding -->
                @using (Html.BeginForm("Bookings", "User", FormMethod.Post, null))
                {
                    <div class="mb-2">
                        <label class="form-label mb-1">User ID</label>
                        @Html.TextBoxFor(a => a.UserId, new { @class = "form-control form-control-sm", @readonly = "readonly" })
                    </div>

                    <div class="mb-2">
                        <label class="form-label mb-1">Event Name</label>
                        @Html.TextBoxFor(a => a.EventName, new { @class = "form-control form-control-sm", @placeholder = "Enter Event Title", @required = "required" })
                    </div>

                    <div class="mb-2">
                        <label class="form-label mb-1">Location</label>
                        @Html.TextBoxFor(a => a.Location, new { @class = "form-control form-control-sm", @placeholder = "Enter Location", @required = "required", id = "LocationInput" })
                    </div>

                    <!-- Venue Text Box for Manual Input -->
                    <div class="mb-2">
                        <label class="form-label mb-1">Venue</label>
                        @Html.TextBoxFor(a => a.VenueName, new { @class = "form-control form-control-sm", @placeholder = "Enter Venue", @required = "required", id = "VenueInput" })
                    </div>

                    <div class="mb-2">
                        <label class="form-label mb-1">Services</label>
                        @Html.TextBoxFor(a => a.Services, new { @class = "form-control form-control-sm", @placeholder = "Enter Services (Optional)" })
                    </div>

                    <div class="mb-2">
                        <label class="form-label mb-1">Capacity</label>
                        @Html.TextBoxFor(a => a.Capacity, new { @class = "form-control form-control-sm", @type = "number", @placeholder = "Enter Capacity", @required = "required" })
                    </div>

                    <div class="mb-2">
                        <label class="form-label mb-1">Description</label>
                        @Html.TextAreaFor(a => a.Description, new { @class = "form-control form-control-sm", @placeholder = "Enter Description", @rows = "2" }) <!-- Reduced rows -->
                    </div>

                    <div class="mb-2">
                        <label class="form-label mb-1">Event Date</label>
                        @Html.TextBoxFor(a => a.EventDate, new { @class = "form-control form-control-sm", @type = "datetime-local", @required = "required" })
                    </div>

                    <!-- Centered Button -->
                    <div class="d-flex justify-content-center mt-2">
                        <!-- Reduced margin -->
                        <button type="submit" class="btn btn-success btn-sm w-50">Book Now</button>
                    </div>

                    @if (!string.IsNullOrWhiteSpace(ViewBag.ErrorMsg))
                    {
                        <div class="alert alert-danger mt-2 text-center">@ViewBag.ErrorMsg</div>
                    }
                    @if (!string.IsNullOrWhiteSpace(ViewBag.SuccessMsg))
                    {
                        <div class="alert alert-success mt-2 text-center">@ViewBag.SuccessMsg</div>
                    }
                }
            </div>
        </div>
    </div>
</div>

<script>
    // AJAX call to fetch venues based on location (but without using a dropdown)
    $(document).ready(function () {
        $('#LocationInput').on('input', function () {
            var location = $(this).val();
            if (location.length > 2) {  // Trigger only when there are at least 3 characters
                $.ajax({
                    url: '@Url.Action("GetVenuesByLocation", "Bookings")',
                    data: { location: location },
                    success: function (data) {
                        var venueSuggestions = $('#VenueInput');
                        venueSuggestions.val(''); // Clear the current venue input

                        // Create a list of suggestions based on the venues available
                        if (data && data.length > 0) {
                            var suggestions = '<ul class="list-group mt-2">';
                            $.each(data, function (index, venue) {
                                suggestions += '<li class="list-group-item list-group-item-action">' + venue.VenueName + '</li>';
                            });
                            suggestions += '</ul>';
                            $('#VenueSuggestions').html(suggestions);

                            // Allow user to click on a suggestion to autofill the venue input
                            $('#VenueSuggestions li').on('click', function () {
                                venueSuggestions.val($(this).text());
                                $('#VenueSuggestions').html(''); // Clear suggestions after selection
                            });
                        } else {
                            $('#VenueSuggestions').html('<p>No venues found for this location</p>');
                        }
                    },
                    error: function () {
                        alert('Error fetching venues');
                    }
                });
            } else {
                $('#VenueSuggestions').html(''); // Clear suggestions if location is too short
            }
        });
    });
</script>

<!-- A div to display venue suggestions -->
<div id="VenueSuggestions"></div>
