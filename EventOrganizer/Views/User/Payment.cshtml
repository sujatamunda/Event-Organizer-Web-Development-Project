@* @model EventOrganizer.Models.PaymentViewModel

@{
    ViewData["Title"] = "Payment";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white">
                    <h6 class="mb-3 text-white text-center">Make Payment</h6>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm("Payment", "User", FormMethod.Post))
                    {
                        @Html.HiddenFor(a => a.BookingId)

                        <!-- Choose Payment Type -->
                        <div class="form-group mb-3">
                            <label class="form-label text-dark">Choose Payment Type</label><br />
                            <div class="form-check">
                                <input type="radio" name="paymentType" value="Advance" class="form-check-input" checked onclick="updateAmount(@Model.FullPaymentAmount * 0.20, 'Advance')" />
                                <label class="form-check-label">Advance (20%)</label>
                            </div>
                            <div class="form-check">
                                <input type="radio" name="paymentType" value="Full" class="form-check-input" onclick="updateAmount(@Model.FullPaymentAmount, 'Full')" />
                                <label class="form-check-label">Full Payment</label>
                            </div>

                            <!-- Hidden field to submit selected payment type -->
                            <input type="hidden" id="PaymentType" name="PaymentType" value="Advance" />
                        </div>

                        <!-- Display Amount -->
                        <div class="form-group mb-3">
                            <label for="Amount" class="form-label text-dark">Amount</label>
                            <input type="text" class="form-control" id="amountField" name="Amount" value="@Model.Amount" readonly />
                            @Html.ValidationMessageFor(a => a.Amount, null, new { @class = "text-danger" })
                        </div>

                        <!-- JS to update amount and type -->
                        <script>
                            function updateAmount(value, type) {
                                document.getElementById("amountField").value = value.toFixed(2);
                                document.getElementById("PaymentType").value = type;
                            }
                        </script>

                        <!-- Payment Method -->
                        <div class="form-group mb-3">
                            <label for="PaymentMethod" class="form-label text-dark">Payment Method</label>
                            <select asp-for="PaymentMethod" class="form-control" required>
                                <option value="" disabled selected>Select Payment Method</option>
                                <option value="Credit Card">Credit Card</option>
                                <option value="Debit Card">Debit Card</option>
                            </select>
                            @Html.ValidationMessageFor(a => a.PaymentMethod, null, new { @class = "text-danger" })
                        </div>

                        <!-- Card Number -->
                        <div class="form-group mb-3">
                            <label for="CardNumber" class="form-label text-dark">Card Number</label>
                            @Html.TextBoxFor(a => a.CardNumber, new { @class = "form-control", placeholder = "Enter Card Number", maxlength = "16", required = "required" })
                            @Html.ValidationMessageFor(a => a.CardNumber, null, new { @class = "text-danger" })
                        </div>

                        <!-- Expiry Date -->
                        <div class="form-group mb-3">
                            <label for="ExpiryDate" class="form-label text-dark">Expiry Date</label>
                            @Html.TextBoxFor(a => a.ExpiryDate, new { @class = "form-control", placeholder = "MM/YY", required = "required", type = "month" })
                            @Html.ValidationMessageFor(a => a.ExpiryDate, null, new { @class = "text-danger" })
                        </div>

                        <!-- CVV -->
                        <div class="form-group mb-3">
                            <label for="CVV" class="form-label text-dark">CVV</label>
                            @Html.TextBoxFor(a => a.CVV, new { @class = "form-control", placeholder = "Enter CVV", maxlength = "3", required = "required", type = "password" })
                            @Html.ValidationMessageFor(a => a.CVV, null, new { @class = "text-danger" })
                        </div>

                        <div class="d-flex justify-content-center mt-3">
                            <button type="submit" class="btn btn-success btn-sm">Pay Now</button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
 *@



                         @*    @model EventOrganizer.Models.PaymentViewModel

@{
    ViewData["Title"] = "Payment";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white">
                    <h6 class="mb-3 text-white text-center">Make Payment</h6>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm("Payment", "User", FormMethod.Post))
                    {
                        @Html.HiddenFor(a => a.BookingId)

                        <!-- Choose Payment Type -->
                        <div class="form-group mb-3">
                            <label class="form-label text-dark">Choose Payment Type</label><br />
                            <div class="form-check">
                                <input type="radio" name="PaymentType" value="Advance" class="form-check-input" checked onclick="updateAmount(@Model.FullPaymentAmount * 0.20, 'Advance')" />
                                <label class="form-check-label">Advance (20%)</label>
                            </div>
                            <div class="form-check">
                                <input type="radio" name="PaymentType" value="Full" class="form-check-input" onclick="updateAmount(@Model.FullPaymentAmount, 'Full')" />
                                <label class="form-check-label">Full Payment</label>
                            </div>

                            <!-- Hidden field to submit selected payment type -->
                            <input type="hidden" id="PaymentType" name="PaymentType" value="Advance" />
                        </div>

                        <!-- Display Amount -->
                        <div class="form-group mb-3">
                            <label for="Amount" class="form-label text-dark">Amount</label>
                            @Html.TextBoxFor(a => a.Amount, new { @class = "form-control", @id = "amountField", @readonly = "readonly" })

                            @Html.ValidationMessageFor(a => a.Amount, null, new { @class = "text-danger" })
                        </div>

                        <!-- JS to update amount and type -->
                        <script>
                            function updateAmount(value, type) {
                                document.getElementById("amountField").value = value.toFixed(2);
                                document.getElementById("PaymentType").value = type;
                            }
                        </script>

                        <!-- Payment Method -->
                        <div class="form-group mb-3">
                            <label for="PaymentMethod" class="form-label text-dark">Payment Method</label>
                            <select asp-for="PaymentMethod" class="form-control" required>
                                <option value="" disabled selected>Select Payment Method</option>
                                <option value="Credit Card">Credit Card</option>
                                <option value="Debit Card">Debit Card</option>
                            </select>
                            @Html.ValidationMessageFor(a => a.PaymentMethod, null, new { @class = "text-danger" })
                        </div>

                        <!-- Card Number -->
                        <div class="form-group mb-3">
                            <label for="CardNumber" class="form-label text-dark">Card Number</label>
                            @Html.TextBoxFor(a => a.CardNumber, new { @class = "form-control", placeholder = "Enter Card Number", maxlength = "16", required = "required" })
                            @Html.ValidationMessageFor(a => a.CardNumber, null, new { @class = "text-danger" })
                        </div>

                        <!-- Expiry Date -->
                        <div class="form-group mb-3">
                            <label for="ExpiryDate" class="form-label text-dark">Expiry Date</label>
                            @Html.TextBoxFor(a => a.ExpiryDate, new { @class = "form-control", placeholder = "MM/YY", required = "required", type = "month" })
                            @Html.ValidationMessageFor(a => a.ExpiryDate, null, new { @class = "text-danger" })
                        </div>

                        <!-- CVV -->
                        <div class="form-group mb-3">
                            <label for="CVV" class="form-label text-dark">CVV</label>
                            @Html.TextBoxFor(a => a.CVV, new { @class = "form-control", placeholder = "Enter CVV", maxlength = "3", required = "required", type = "password" })
                            @Html.ValidationMessageFor(a => a.CVV, null, new { @class = "text-danger" })
                        </div>

                        <div class="d-flex justify-content-center mt-3">
                            <button type="submit" class="btn btn-success btn-sm">Pay Now</button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}

 *@





                            @model EventOrganizer.Models.PaymentViewModel

@{
    ViewData["Title"] = "Payment";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-md-10">
            <div class="card shadow border-0 rounded-4">
                <div class="row g-0">
                    <!-- Left Side Image -->
                    <div class="col-md-5 d-none d-md-block">
                        <img src="~/images/payment.jpg" alt="Payment Image" class="img-fluid h-100 rounded-start" style="object-fit: cover;" />
                    </div>

                    <!-- Right Side Form -->
                    <div class="col-md-7">
                        <div class="card-body p-4">
                            <h5 class="card-title text-center text-primary mb-4"> Payment</h5>

                            @using (Html.BeginForm("Payment", "User", FormMethod.Post))
                            {
                                @Html.HiddenFor(a => a.BookingId)

                                <div class="form-group mb-3">
                                    <label class="form-label text-dark">Choose Payment Type</label>
                                    <div class="form-check">
                                        <input type="radio" name="PaymentType" value="Advance" class="form-check-input" checked onclick="updateAmount(@Model.FullPaymentAmount * 0.20, 'Advance')" />
                                        <label class="form-check-label">Advance (20%)</label>
                                    </div>
                                    <div class="form-check">
                                        <input type="radio" name="PaymentType" value="Full" class="form-check-input" onclick="updateAmount(@Model.FullPaymentAmount, 'Full')" />
                                        <label class="form-check-label">Full Payment</label>
                                    </div>
                                    <input type="hidden" id="PaymentType" name="PaymentType" value="Advance" />
                                </div>

                                <div class="form-group mb-3">
                                    <label for="Amount" class="form-label text-dark">Amount</label>
                                    @Html.TextBoxFor(a => a.Amount, new { @class = "form-control", @id = "amountField", @readonly = "readonly" })
                                    @Html.ValidationMessageFor(a => a.Amount, null, new { @class = "text-danger" })
                                </div>

                                <script>
                                    function updateAmount(value, type) {
                                        document.getElementById("amountField").value = value.toFixed(2);
                                        document.getElementById("PaymentType").value = type;
                                    }
                                </script>

                                <div class="form-group mb-3">
                                    <label for="PaymentMethod" class="form-label text-dark">Payment Method</label>
                                    <select asp-for="PaymentMethod" class="form-control" required>
                                        <option value="" disabled selected>Select Payment Method</option>
                                        <option value="Credit Card">Credit Card</option>
                                        <option value="Debit Card">Debit Card</option>
                                    </select>
                                    @Html.ValidationMessageFor(a => a.PaymentMethod, null, new { @class = "text-danger" })
                                </div>

                                <div class="form-group mb-3">
                                    <label for="CardNumber" class="form-label text-dark">Card Number</label>
                                    @Html.TextBoxFor(a => a.CardNumber, new { @class = "form-control", placeholder = "Enter Card Number", maxlength = "16", required = "required" })
                                    @Html.ValidationMessageFor(a => a.CardNumber, null, new { @class = "text-danger" })
                                </div>

                                <div class="form-group mb-3">
                                    <label for="ExpiryDate" class="form-label text-dark">Expiry Date</label>
                                    @Html.TextBoxFor(a => a.ExpiryDate, new { @class = "form-control", placeholder = "MM/YY", type = "month", required = "required" })
                                    @Html.ValidationMessageFor(a => a.ExpiryDate, null, new { @class = "text-danger" })
                                </div>

                                <div class="form-group mb-3">
                                    <label for="CVV" class="form-label text-dark">CVV</label>
                                    @Html.TextBoxFor(a => a.CVV, new { @class = "form-control", placeholder = "Enter CVV", maxlength = "3", required = "required", type = "password" })
                                    @Html.ValidationMessageFor(a => a.CVV, null, new { @class = "text-danger" })
                                </div>

                                <div class="text-center">
                                    <button type="submit" class="btn btn-success px-4">Pay Now</button>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
